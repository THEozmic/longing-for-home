{"version":3,"sources":["webpack:///./node_modules/@vimeo/player/dist/player.es.js"],"names":["global","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isNode","toString","call","getMethodName","prop","type","indexOf","toLowerCase","concat","substr","toUpperCase","isDomElement","element","Boolean","nodeType","ownerDocument","defaultView","isInteger","value","isNaN","parseFloat","isFinite","Math","floor","isVimeoUrl","url","test","getVimeoUrl","oEmbedParameters","arguments","undefined","id","idOrUrl","Error","replace","arrayIndexOfSupport","Array","postMessageSupport","window","postMessage","commonjsGlobal","self","createCommonjsModule","fn","module","exports","WeakMap","hasOwnProperty","object","name","this","genId","checkInstance","x","methodName","isObject","prefix","rand","random","substring","entry","_id","npo_src","context","definition","builtInProp","cycle","scheduling_queue","ToString","timer","setImmediate","setTimeout","obj","val","config","err","schedule","add","drain","isThenable","o","_then","o_type","then","notify","chain","notifyIsolated","state","success","failure","cb","ret","reject","msg","promise","resolve","triggered","def","def_wrapper","MakeDefWrapper","apply","iteratePromises","arr","resolver","rejecter","idx","MakeDef","Promise","executor","__NPO__","constructor","push","first","last","item","Item","next","f","PromisePrototype","len","msgs","count","callbackMap","storeCallback","player","callback","playerCallbacks","get","set","getCallbacks","removeCallback","index","splice","shiftCallbacks","shift","swapCallbacks","oldElement","newElement","delete","getOEmbedParameters","defaults","reduce","params","param","getAttribute","createEmbed","_ref","html","querySelector","div","document","createElement","innerHTML","appendChild","firstChild","setAttribute","getOEmbedData","videoUrl","encodeURIComponent","xhr","XDomainRequest","XMLHttpRequest","open","onload","status","json","JSON","parse","responseText","domain_status_code","error","onerror","send","initializeEmbeds","parent","elements","slice","querySelectorAll","handleError","console","forEach","data","catch","resizeEmbeds","VimeoPlayerResizeEmbeds_","onMessage","event","origin","iframes","contentWindow","source","space","parentElement","style","paddingBottom","bottom","addEventListener","attachEvent","parseMessageData","warn","method","message","ieVersion","navigator","userAgent","stringify","processData","callbacks","promises","e","playerMap","readyMap","Player","_this","options","jQuery","getElementById","win","nodeName","iframe","has","readyPromise","isError","isReadyError","isReadyEvent","isPingResponse","_originalElement","_this2","args","ready","_this3","_this4","eventName","callMethod","lastCallback","time","language","kind","_this5","removeAttribute","parentNode","removeChild","autopause","color","currentTime","loop","playbackRate","volume","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0de528.b7fe513e.js","sourcesContent":["/*! @vimeo/player v2.9.1 | (c) 2019 Vimeo | MIT License | https://github.com/vimeo/player.js */\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * @module lib/functions\n */\n\n/**\n * Check to see this is a node environment.\n * @type {Boolean}\n */\n\n/* global global */\nvar isNode = typeof global !== 'undefined' && {}.toString.call(global) === '[object global]';\n/**\n * Get the name of the method for a given getter or setter.\n *\n * @param {string} prop The name of the property.\n * @param {string} type Either “get” or “set”.\n * @return {string}\n */\n\nfunction getMethodName(prop, type) {\n  if (prop.indexOf(type.toLowerCase()) === 0) {\n    return prop;\n  }\n\n  return \"\".concat(type.toLowerCase()).concat(prop.substr(0, 1).toUpperCase()).concat(prop.substr(1));\n}\n/**\n * Check to see if the object is a DOM Element.\n *\n * @param {*} element The object to check.\n * @return {boolean}\n */\n\nfunction isDomElement(element) {\n  return Boolean(element && element.nodeType === 1 && 'nodeName' in element && element.ownerDocument && element.ownerDocument.defaultView);\n}\n/**\n * Check to see whether the value is a number.\n *\n * @see http://dl.dropboxusercontent.com/u/35146/js/tests/isNumber.html\n * @param {*} value The value to check.\n * @param {boolean} integer Check if the value is an integer.\n * @return {boolean}\n */\n\nfunction isInteger(value) {\n  // eslint-disable-next-line eqeqeq\n  return !isNaN(parseFloat(value)) && isFinite(value) && Math.floor(value) == value;\n}\n/**\n * Check to see if the URL is a Vimeo url.\n *\n * @param {string} url The url string.\n * @return {boolean}\n */\n\nfunction isVimeoUrl(url) {\n  return /^(https?:)?\\/\\/((player|www)\\.)?vimeo\\.com(?=$|\\/)/.test(url);\n}\n/**\n * Get the Vimeo URL from an element.\n * The element must have either a data-vimeo-id or data-vimeo-url attribute.\n *\n * @param {object} oEmbedParameters The oEmbed parameters.\n * @return {string}\n */\n\nfunction getVimeoUrl() {\n  var oEmbedParameters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var id = oEmbedParameters.id;\n  var url = oEmbedParameters.url;\n  var idOrUrl = id || url;\n\n  if (!idOrUrl) {\n    throw new Error('An id or url must be passed, either in an options object or as a data-vimeo-id or data-vimeo-url attribute.');\n  }\n\n  if (isInteger(idOrUrl)) {\n    return \"https://vimeo.com/\".concat(idOrUrl);\n  }\n\n  if (isVimeoUrl(idOrUrl)) {\n    return idOrUrl.replace('http:', 'https:');\n  }\n\n  if (id) {\n    throw new TypeError(\"\\u201C\".concat(id, \"\\u201D is not a valid video id.\"));\n  }\n\n  throw new TypeError(\"\\u201C\".concat(idOrUrl, \"\\u201D is not a vimeo.com url.\"));\n}\n\nvar arrayIndexOfSupport = typeof Array.prototype.indexOf !== 'undefined';\nvar postMessageSupport = typeof window !== 'undefined' && typeof window.postMessage !== 'undefined';\n\nif (!isNode && (!arrayIndexOfSupport || !postMessageSupport)) {\n  throw new Error('Sorry, the Vimeo Player API is not available in this browser.');\n}\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\n/*!\n * weakmap-polyfill v2.0.0 - ECMAScript6 WeakMap polyfill\n * https://github.com/polygonplanet/weakmap-polyfill\n * Copyright (c) 2015-2016 polygon planet <polygon.planet.aqua@gmail.com>\n * @license MIT\n */\n(function (self) {\n\n  if (self.WeakMap) {\n    return;\n  }\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  var defineProperty = function (object, name, value) {\n    if (Object.defineProperty) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  self.WeakMap = function () {\n    // ECMA-262 23.3 WeakMap Objects\n    function WeakMap() {\n      if (this === void 0) {\n        throw new TypeError(\"Constructor WeakMap requires 'new'\");\n      }\n\n      defineProperty(this, '_id', genId('_WeakMap')); // ECMA-262 23.3.1.1 WeakMap([iterable])\n\n      if (arguments.length > 0) {\n        // Currently, WeakMap `iterable` argument is not supported\n        throw new TypeError('WeakMap iterable is not supported');\n      }\n    } // ECMA-262 23.3.3.2 WeakMap.prototype.delete(key)\n\n\n    defineProperty(WeakMap.prototype, 'delete', function (key) {\n      checkInstance(this, 'delete');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        delete key[this._id];\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.3 WeakMap.prototype.get(key)\n\n    defineProperty(WeakMap.prototype, 'get', function (key) {\n      checkInstance(this, 'get');\n\n      if (!isObject(key)) {\n        return void 0;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return entry[1];\n      }\n\n      return void 0;\n    }); // ECMA-262 23.3.3.4 WeakMap.prototype.has(key)\n\n    defineProperty(WeakMap.prototype, 'has', function (key) {\n      checkInstance(this, 'has');\n\n      if (!isObject(key)) {\n        return false;\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        return true;\n      }\n\n      return false;\n    }); // ECMA-262 23.3.3.5 WeakMap.prototype.set(key, value)\n\n    defineProperty(WeakMap.prototype, 'set', function (key, value) {\n      checkInstance(this, 'set');\n\n      if (!isObject(key)) {\n        throw new TypeError('Invalid value used as weak map key');\n      }\n\n      var entry = key[this._id];\n\n      if (entry && entry[0] === key) {\n        entry[1] = value;\n        return this;\n      }\n\n      defineProperty(key, this._id, [key, value]);\n      return this;\n    });\n\n    function checkInstance(x, methodName) {\n      if (!isObject(x) || !hasOwnProperty.call(x, '_id')) {\n        throw new TypeError(methodName + ' method called on incompatible receiver ' + typeof x);\n      }\n    }\n\n    function genId(prefix) {\n      return prefix + '_' + rand() + '.' + rand();\n    }\n\n    function rand() {\n      return Math.random().toString().substring(2);\n    }\n\n    defineProperty(WeakMap, '_polyfill', true);\n    return WeakMap;\n  }();\n\n  function isObject(x) {\n    return Object(x) === x;\n  }\n})(typeof self !== 'undefined' ? self : typeof window !== 'undefined' ? window : typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : commonjsGlobal);\n\nvar npo_src = createCommonjsModule(function (module) {\n/*! Native Promise Only\n    v0.8.1 (c) Kyle Simpson\n    MIT License: http://getify.mit-license.org\n*/\n(function UMD(name, context, definition) {\n  // special form of UMD for polyfilling across evironments\n  context[name] = context[name] || definition();\n\n  if (module.exports) {\n    module.exports = context[name];\n  }\n})(\"Promise\", typeof commonjsGlobal != \"undefined\" ? commonjsGlobal : commonjsGlobal, function DEF() {\n\n  var builtInProp,\n      cycle,\n      scheduling_queue,\n      ToString = Object.prototype.toString,\n      timer = typeof setImmediate != \"undefined\" ? function timer(fn) {\n    return setImmediate(fn);\n  } : setTimeout; // dammit, IE8.\n\n  try {\n    Object.defineProperty({}, \"x\", {});\n\n    builtInProp = function builtInProp(obj, name, val, config) {\n      return Object.defineProperty(obj, name, {\n        value: val,\n        writable: true,\n        configurable: config !== false\n      });\n    };\n  } catch (err) {\n    builtInProp = function builtInProp(obj, name, val) {\n      obj[name] = val;\n      return obj;\n    };\n  } // Note: using a queue instead of array for efficiency\n\n\n  scheduling_queue = function Queue() {\n    var first, last, item;\n\n    function Item(fn, self) {\n      this.fn = fn;\n      this.self = self;\n      this.next = void 0;\n    }\n\n    return {\n      add: function add(fn, self) {\n        item = new Item(fn, self);\n\n        if (last) {\n          last.next = item;\n        } else {\n          first = item;\n        }\n\n        last = item;\n        item = void 0;\n      },\n      drain: function drain() {\n        var f = first;\n        first = last = cycle = void 0;\n\n        while (f) {\n          f.fn.call(f.self);\n          f = f.next;\n        }\n      }\n    };\n  }();\n\n  function schedule(fn, self) {\n    scheduling_queue.add(fn, self);\n\n    if (!cycle) {\n      cycle = timer(scheduling_queue.drain);\n    }\n  } // promise duck typing\n\n\n  function isThenable(o) {\n    var _then,\n        o_type = typeof o;\n\n    if (o != null && (o_type == \"object\" || o_type == \"function\")) {\n      _then = o.then;\n    }\n\n    return typeof _then == \"function\" ? _then : false;\n  }\n\n  function notify() {\n    for (var i = 0; i < this.chain.length; i++) {\n      notifyIsolated(this, this.state === 1 ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n    }\n\n    this.chain.length = 0;\n  } // NOTE: This is a separate function to isolate\n  // the `try..catch` so that other code can be\n  // optimized better\n\n\n  function notifyIsolated(self, cb, chain) {\n    var ret, _then;\n\n    try {\n      if (cb === false) {\n        chain.reject(self.msg);\n      } else {\n        if (cb === true) {\n          ret = self.msg;\n        } else {\n          ret = cb.call(void 0, self.msg);\n        }\n\n        if (ret === chain.promise) {\n          chain.reject(TypeError(\"Promise-chain cycle\"));\n        } else if (_then = isThenable(ret)) {\n          _then.call(ret, chain.resolve, chain.reject);\n        } else {\n          chain.resolve(ret);\n        }\n      }\n    } catch (err) {\n      chain.reject(err);\n    }\n  }\n\n  function resolve(msg) {\n    var _then,\n        self = this; // already triggered?\n\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    try {\n      if (_then = isThenable(msg)) {\n        schedule(function () {\n          var def_wrapper = new MakeDefWrapper(self);\n\n          try {\n            _then.call(msg, function $resolve$() {\n              resolve.apply(def_wrapper, arguments);\n            }, function $reject$() {\n              reject.apply(def_wrapper, arguments);\n            });\n          } catch (err) {\n            reject.call(def_wrapper, err);\n          }\n        });\n      } else {\n        self.msg = msg;\n        self.state = 1;\n\n        if (self.chain.length > 0) {\n          schedule(notify, self);\n        }\n      }\n    } catch (err) {\n      reject.call(new MakeDefWrapper(self), err);\n    }\n  }\n\n  function reject(msg) {\n    var self = this; // already triggered?\n\n    if (self.triggered) {\n      return;\n    }\n\n    self.triggered = true; // unwrap\n\n    if (self.def) {\n      self = self.def;\n    }\n\n    self.msg = msg;\n    self.state = 2;\n\n    if (self.chain.length > 0) {\n      schedule(notify, self);\n    }\n  }\n\n  function iteratePromises(Constructor, arr, resolver, rejecter) {\n    for (var idx = 0; idx < arr.length; idx++) {\n      (function IIFE(idx) {\n        Constructor.resolve(arr[idx]).then(function $resolver$(msg) {\n          resolver(idx, msg);\n        }, rejecter);\n      })(idx);\n    }\n  }\n\n  function MakeDefWrapper(self) {\n    this.def = self;\n    this.triggered = false;\n  }\n\n  function MakeDef(self) {\n    this.promise = self;\n    this.state = 0;\n    this.triggered = false;\n    this.chain = [];\n    this.msg = void 0;\n  }\n\n  function Promise(executor) {\n    if (typeof executor != \"function\") {\n      throw TypeError(\"Not a function\");\n    }\n\n    if (this.__NPO__ !== 0) {\n      throw TypeError(\"Not a promise\");\n    } // instance shadowing the inherited \"brand\"\n    // to signal an already \"initialized\" promise\n\n\n    this.__NPO__ = 1;\n    var def = new MakeDef(this);\n\n    this[\"then\"] = function then(success, failure) {\n      var o = {\n        success: typeof success == \"function\" ? success : true,\n        failure: typeof failure == \"function\" ? failure : false\n      }; // Note: `then(..)` itself can be borrowed to be used against\n      // a different promise constructor for making the chained promise,\n      // by substituting a different `this` binding.\n\n      o.promise = new this.constructor(function extractChain(resolve, reject) {\n        if (typeof resolve != \"function\" || typeof reject != \"function\") {\n          throw TypeError(\"Not a function\");\n        }\n\n        o.resolve = resolve;\n        o.reject = reject;\n      });\n      def.chain.push(o);\n\n      if (def.state !== 0) {\n        schedule(notify, def);\n      }\n\n      return o.promise;\n    };\n\n    this[\"catch\"] = function $catch$(failure) {\n      return this.then(void 0, failure);\n    };\n\n    try {\n      executor.call(void 0, function publicResolve(msg) {\n        resolve.call(def, msg);\n      }, function publicReject(msg) {\n        reject.call(def, msg);\n      });\n    } catch (err) {\n      reject.call(def, err);\n    }\n  }\n\n  var PromisePrototype = builtInProp({}, \"constructor\", Promise,\n  /*configurable=*/\n  false); // Note: Android 4 cannot use `Object.defineProperty(..)` here\n\n  Promise.prototype = PromisePrototype; // built-in \"brand\" to signal an \"uninitialized\" promise\n\n  builtInProp(PromisePrototype, \"__NPO__\", 0,\n  /*configurable=*/\n  false);\n  builtInProp(Promise, \"resolve\", function Promise$resolve(msg) {\n    var Constructor = this; // spec mandated checks\n    // note: best \"isPromise\" check that's practical for now\n\n    if (msg && typeof msg == \"object\" && msg.__NPO__ === 1) {\n      return msg;\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      resolve(msg);\n    });\n  });\n  builtInProp(Promise, \"reject\", function Promise$reject(msg) {\n    return new this(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      reject(msg);\n    });\n  });\n  builtInProp(Promise, \"all\", function Promise$all(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    if (arr.length === 0) {\n      return Constructor.resolve([]);\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      var len = arr.length,\n          msgs = Array(len),\n          count = 0;\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        msgs[idx] = msg;\n\n        if (++count === len) {\n          resolve(msgs);\n        }\n      }, reject);\n    });\n  });\n  builtInProp(Promise, \"race\", function Promise$race(arr) {\n    var Constructor = this; // spec mandated checks\n\n    if (ToString.call(arr) != \"[object Array]\") {\n      return Constructor.reject(TypeError(\"Not an array\"));\n    }\n\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve != \"function\" || typeof reject != \"function\") {\n        throw TypeError(\"Not a function\");\n      }\n\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        resolve(msg);\n      }, reject);\n    });\n  });\n  return Promise;\n});\n});\n\n/**\n * @module lib/callbacks\n */\nvar callbackMap = new WeakMap();\n/**\n * Store a callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @param {(function(this:Player, *): void|{resolve: function, reject: function})} callback\n *        The callback to call or an object with resolve and reject functions for a promise.\n * @return {void}\n */\n\nfunction storeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!(name in playerCallbacks)) {\n    playerCallbacks[name] = [];\n  }\n\n  playerCallbacks[name].push(callback);\n  callbackMap.set(player.element, playerCallbacks);\n}\n/**\n * Get the callbacks for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @return {function[]}\n */\n\nfunction getCallbacks(player, name) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n  return playerCallbacks[name] || [];\n}\n/**\n * Remove a stored callback for a method or event for a player.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name\n * @param {function} [callback] The specific callback to remove.\n * @return {boolean} Was this the last callback?\n */\n\nfunction removeCallback(player, name, callback) {\n  var playerCallbacks = callbackMap.get(player.element) || {};\n\n  if (!playerCallbacks[name]) {\n    return true;\n  } // If no callback is passed, remove all callbacks for the event\n\n\n  if (!callback) {\n    playerCallbacks[name] = [];\n    callbackMap.set(player.element, playerCallbacks);\n    return true;\n  }\n\n  var index = playerCallbacks[name].indexOf(callback);\n\n  if (index !== -1) {\n    playerCallbacks[name].splice(index, 1);\n  }\n\n  callbackMap.set(player.element, playerCallbacks);\n  return playerCallbacks[name] && playerCallbacks[name].length === 0;\n}\n/**\n * Return the first stored callback for a player and event or method.\n *\n * @param {Player} player The player object.\n * @param {string} name The method or event name.\n * @return {function} The callback, or false if there were none\n */\n\nfunction shiftCallbacks(player, name) {\n  var playerCallbacks = getCallbacks(player, name);\n\n  if (playerCallbacks.length < 1) {\n    return false;\n  }\n\n  var callback = playerCallbacks.shift();\n  removeCallback(player, name, callback);\n  return callback;\n}\n/**\n * Move callbacks associated with an element to another element.\n *\n * @param {HTMLElement} oldElement The old element.\n * @param {HTMLElement} newElement The new element.\n * @return {void}\n */\n\nfunction swapCallbacks(oldElement, newElement) {\n  var playerCallbacks = callbackMap.get(oldElement);\n  callbackMap.set(newElement, playerCallbacks);\n  callbackMap.delete(oldElement);\n}\n\n/**\n * @module lib/embed\n */\nvar oEmbedParameters = ['autopause', 'autoplay', 'background', 'byline', 'color', 'controls', 'dnt', 'height', 'id', 'loop', 'maxheight', 'maxwidth', 'muted', 'playsinline', 'portrait', 'responsive', 'speed', 'texttrack', 'title', 'transparent', 'url', 'width'];\n/**\n * Get the 'data-vimeo'-prefixed attributes from an element as an object.\n *\n * @param {HTMLElement} element The element.\n * @param {Object} [defaults={}] The default values to use.\n * @return {Object<string, string>}\n */\n\nfunction getOEmbedParameters(element) {\n  var defaults = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return oEmbedParameters.reduce(function (params, param) {\n    var value = element.getAttribute(\"data-vimeo-\".concat(param));\n\n    if (value || value === '') {\n      params[param] = value === '' ? 1 : value;\n    }\n\n    return params;\n  }, defaults);\n}\n/**\n * Create an embed from oEmbed data inside an element.\n *\n * @param {object} data The oEmbed data.\n * @param {HTMLElement} element The element to put the iframe in.\n * @return {HTMLIFrameElement} The iframe embed.\n */\n\nfunction createEmbed(_ref, element) {\n  var html = _ref.html;\n\n  if (!element) {\n    throw new TypeError('An element must be provided');\n  }\n\n  if (element.getAttribute('data-vimeo-initialized') !== null) {\n    return element.querySelector('iframe');\n  }\n\n  var div = document.createElement('div');\n  div.innerHTML = html;\n  element.appendChild(div.firstChild);\n  element.setAttribute('data-vimeo-initialized', 'true');\n  return element.querySelector('iframe');\n}\n/**\n * Make an oEmbed call for the specified URL.\n *\n * @param {string} videoUrl The vimeo.com url for the video.\n * @param {Object} [params] Parameters to pass to oEmbed.\n * @param {HTMLElement} element The element.\n * @return {Promise}\n */\n\nfunction getOEmbedData(videoUrl) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var element = arguments.length > 2 ? arguments[2] : undefined;\n  return new Promise(function (resolve, reject) {\n    if (!isVimeoUrl(videoUrl)) {\n      throw new TypeError(\"\\u201C\".concat(videoUrl, \"\\u201D is not a vimeo.com url.\"));\n    }\n\n    var url = \"https://vimeo.com/api/oembed.json?url=\".concat(encodeURIComponent(videoUrl));\n\n    for (var param in params) {\n      if (params.hasOwnProperty(param)) {\n        url += \"&\".concat(param, \"=\").concat(encodeURIComponent(params[param]));\n      }\n    }\n\n    var xhr = 'XDomainRequest' in window ? new XDomainRequest() : new XMLHttpRequest();\n    xhr.open('GET', url, true);\n\n    xhr.onload = function () {\n      if (xhr.status === 404) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D was not found.\")));\n        return;\n      }\n\n      if (xhr.status === 403) {\n        reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n        return;\n      }\n\n      try {\n        var json = JSON.parse(xhr.responseText); // Check api response for 403 on oembed\n\n        if (json.domain_status_code === 403) {\n          // We still want to create the embed to give users visual feedback\n          createEmbed(json, element);\n          reject(new Error(\"\\u201C\".concat(videoUrl, \"\\u201D is not embeddable.\")));\n          return;\n        }\n\n        resolve(json);\n      } catch (error) {\n        reject(error);\n      }\n    };\n\n    xhr.onerror = function () {\n      var status = xhr.status ? \" (\".concat(xhr.status, \")\") : '';\n      reject(new Error(\"There was an error fetching the embed code from Vimeo\".concat(status, \".\")));\n    };\n\n    xhr.send();\n  });\n}\n/**\n * Initialize all embeds within a specific element\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction initializeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var elements = [].slice.call(parent.querySelectorAll('[data-vimeo-id], [data-vimeo-url]'));\n\n  var handleError = function handleError(error) {\n    if ('console' in window && console.error) {\n      console.error(\"There was an error creating an embed: \".concat(error));\n    }\n  };\n\n  elements.forEach(function (element) {\n    try {\n      // Skip any that have data-vimeo-defer\n      if (element.getAttribute('data-vimeo-defer') !== null) {\n        return;\n      }\n\n      var params = getOEmbedParameters(element);\n      var url = getVimeoUrl(params);\n      getOEmbedData(url, params, element).then(function (data) {\n        return createEmbed(data, element);\n      }).catch(handleError);\n    } catch (error) {\n      handleError(error);\n    }\n  });\n}\n/**\n * Resize embeds when messaged by the player.\n *\n * @param {HTMLElement} [parent=document] The parent element.\n * @return {void}\n */\n\nfunction resizeEmbeds() {\n  var parent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n\n  // Prevent execution if users include the player.js script multiple times.\n  if (window.VimeoPlayerResizeEmbeds_) {\n    return;\n  }\n\n  window.VimeoPlayerResizeEmbeds_ = true;\n\n  var onMessage = function onMessage(event) {\n    if (!isVimeoUrl(event.origin)) {\n      return;\n    } // 'spacechange' is fired only on embeds with cards\n\n\n    if (!event.data || event.data.event !== 'spacechange') {\n      return;\n    }\n\n    var iframes = parent.querySelectorAll('iframe');\n\n    for (var i = 0; i < iframes.length; i++) {\n      if (iframes[i].contentWindow !== event.source) {\n        continue;\n      } // Change padding-bottom of the enclosing div to accommodate\n      // card carousel without distorting aspect ratio\n\n\n      var space = iframes[i].parentElement;\n      space.style.paddingBottom = \"\".concat(event.data.data[0].bottom, \"px\");\n      break;\n    }\n  };\n\n  if (window.addEventListener) {\n    window.addEventListener('message', onMessage, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('onmessage', onMessage);\n  }\n}\n\n/**\n * @module lib/postmessage\n */\n/**\n * Parse a message received from postMessage.\n *\n * @param {*} data The data received from postMessage.\n * @return {object}\n */\n\nfunction parseMessageData(data) {\n  if (typeof data === 'string') {\n    try {\n      data = JSON.parse(data);\n    } catch (error) {\n      // If the message cannot be parsed, throw the error as a warning\n      console.warn(error);\n      return {};\n    }\n  }\n\n  return data;\n}\n/**\n * Post a message to the specified target.\n *\n * @param {Player} player The player object to use.\n * @param {string} method The API method to call.\n * @param {object} params The parameters to send to the player.\n * @return {void}\n */\n\nfunction postMessage(player, method, params) {\n  if (!player.element.contentWindow || !player.element.contentWindow.postMessage) {\n    return;\n  }\n\n  var message = {\n    method: method\n  };\n\n  if (params !== undefined) {\n    message.value = params;\n  } // IE 8 and 9 do not support passing messages, so stringify them\n\n\n  var ieVersion = parseFloat(navigator.userAgent.toLowerCase().replace(/^.*msie (\\d+).*$/, '$1'));\n\n  if (ieVersion >= 8 && ieVersion < 10) {\n    message = JSON.stringify(message);\n  }\n\n  player.element.contentWindow.postMessage(message, player.origin);\n}\n/**\n * Parse the data received from a message event.\n *\n * @param {Player} player The player that received the message.\n * @param {(Object|string)} data The message data. Strings will be parsed into JSON.\n * @return {void}\n */\n\nfunction processData(player, data) {\n  data = parseMessageData(data);\n  var callbacks = [];\n  var param;\n\n  if (data.event) {\n    if (data.event === 'error') {\n      var promises = getCallbacks(player, data.data.method);\n      promises.forEach(function (promise) {\n        var error = new Error(data.data.message);\n        error.name = data.data.name;\n        promise.reject(error);\n        removeCallback(player, data.data.method, promise);\n      });\n    }\n\n    callbacks = getCallbacks(player, \"event:\".concat(data.event));\n    param = data.data;\n  } else if (data.method) {\n    var callback = shiftCallbacks(player, data.method);\n\n    if (callback) {\n      callbacks.push(callback);\n      param = data.value;\n    }\n  }\n\n  callbacks.forEach(function (callback) {\n    try {\n      if (typeof callback === 'function') {\n        callback.call(player, param);\n        return;\n      }\n\n      callback.resolve(param);\n    } catch (e) {// empty\n    }\n  });\n}\n\nvar playerMap = new WeakMap();\nvar readyMap = new WeakMap();\n\nvar Player =\n/*#__PURE__*/\nfunction () {\n  /**\n   * Create a Player.\n   *\n   * @param {(HTMLIFrameElement|HTMLElement|string|jQuery)} element A reference to the Vimeo\n   *        player iframe, and id, or a jQuery object.\n   * @param {object} [options] oEmbed parameters to use when creating an embed in the element.\n   * @return {Player}\n   */\n  function Player(element) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Player);\n\n    /* global jQuery */\n    if (window.jQuery && element instanceof jQuery) {\n      if (element.length > 1 && window.console && console.warn) {\n        console.warn('A jQuery object with multiple elements was passed, using the first element.');\n      }\n\n      element = element[0];\n    } // Find an element by ID\n\n\n    if (typeof document !== 'undefined' && typeof element === 'string') {\n      element = document.getElementById(element);\n    } // Not an element!\n\n\n    if (!isDomElement(element)) {\n      throw new TypeError('You must pass either a valid element or a valid id.');\n    }\n\n    var win = element.ownerDocument.defaultView; // Already initialized an embed in this div, so grab the iframe\n\n    if (element.nodeName !== 'IFRAME') {\n      var iframe = element.querySelector('iframe');\n\n      if (iframe) {\n        element = iframe;\n      }\n    } // iframe url is not a Vimeo url\n\n\n    if (element.nodeName === 'IFRAME' && !isVimeoUrl(element.getAttribute('src') || '')) {\n      throw new Error('The player element passed isn’t a Vimeo embed.');\n    } // If there is already a player object in the map, return that\n\n\n    if (playerMap.has(element)) {\n      return playerMap.get(element);\n    }\n\n    this.element = element;\n    this.origin = '*';\n    var readyPromise = new npo_src(function (resolve, reject) {\n      var onMessage = function onMessage(event) {\n        if (!isVimeoUrl(event.origin) || _this.element.contentWindow !== event.source) {\n          return;\n        }\n\n        if (_this.origin === '*') {\n          _this.origin = event.origin;\n        }\n\n        var data = parseMessageData(event.data);\n        var isError = data && data.event === 'error';\n        var isReadyError = isError && data.data && data.data.method === 'ready';\n\n        if (isReadyError) {\n          var error = new Error(data.data.message);\n          error.name = data.data.name;\n          reject(error);\n          return;\n        }\n\n        var isReadyEvent = data && data.event === 'ready';\n        var isPingResponse = data && data.method === 'ping';\n\n        if (isReadyEvent || isPingResponse) {\n          _this.element.setAttribute('data-ready', 'true');\n\n          resolve();\n          return;\n        }\n\n        processData(_this, data);\n      };\n\n      if (win.addEventListener) {\n        win.addEventListener('message', onMessage, false);\n      } else if (win.attachEvent) {\n        win.attachEvent('onmessage', onMessage);\n      }\n\n      if (_this.element.nodeName !== 'IFRAME') {\n        var params = getOEmbedParameters(element, options);\n        var url = getVimeoUrl(params);\n        getOEmbedData(url, params, element).then(function (data) {\n          var iframe = createEmbed(data, element); // Overwrite element with the new iframe,\n          // but store reference to the original element\n\n          _this.element = iframe;\n          _this._originalElement = element;\n          swapCallbacks(element, iframe);\n          playerMap.set(_this.element, _this);\n          return data;\n        }).catch(reject);\n      }\n    }); // Store a copy of this Player in the map\n\n    readyMap.set(this, readyPromise);\n    playerMap.set(this.element, this); // Send a ping to the iframe so the ready promise will be resolved if\n    // the player is already ready.\n\n    if (this.element.nodeName === 'IFRAME') {\n      postMessage(this, 'ping');\n    }\n\n    return this;\n  }\n  /**\n   * Get a promise for a method.\n   *\n   * @param {string} name The API method to call.\n   * @param {Object} [args={}] Arguments to send via postMessage.\n   * @return {Promise}\n   */\n\n\n  _createClass(Player, [{\n    key: \"callMethod\",\n    value: function callMethod(name) {\n      var _this2 = this;\n\n      var args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new npo_src(function (resolve, reject) {\n        // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n        return _this2.ready().then(function () {\n          storeCallback(_this2, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this2, name, args);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for the value of a player property.\n     *\n     * @param {string} name The property name\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"get\",\n    value: function get(name) {\n      var _this3 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'get'); // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n        return _this3.ready().then(function () {\n          storeCallback(_this3, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this3, name);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Get a promise for setting the value of a player property.\n     *\n     * @param {string} name The API method to call.\n     * @param {mixed} value The value to set.\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(name, value) {\n      var _this4 = this;\n\n      return new npo_src(function (resolve, reject) {\n        name = getMethodName(name, 'set');\n\n        if (value === undefined || value === null) {\n          throw new TypeError('There must be a value to set.');\n        } // We are storing the resolve/reject handlers to call later, so we\n        // can’t return here.\n        // eslint-disable-next-line promise/always-return\n\n\n        return _this4.ready().then(function () {\n          storeCallback(_this4, name, {\n            resolve: resolve,\n            reject: reject\n          });\n          postMessage(_this4, name, value);\n        }).catch(reject);\n      });\n    }\n    /**\n     * Add an event listener for the specified event. Will call the\n     * callback with a single parameter, `data`, that contains the data for\n     * that event.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function(*)} callback The function to call when the event fires.\n     * @return {void}\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (!callback) {\n        throw new TypeError('You must pass a callback function.');\n      }\n\n      if (typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var callbacks = getCallbacks(this, \"event:\".concat(eventName));\n\n      if (callbacks.length === 0) {\n        this.callMethod('addEventListener', eventName).catch(function () {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n\n      storeCallback(this, \"event:\".concat(eventName), callback);\n    }\n    /**\n     * Remove an event listener for the specified event. Will remove all\n     * listeners for that event if a `callback` isn’t passed, or only that\n     * specific callback if it is passed.\n     *\n     * @param {string} eventName The name of the event.\n     * @param {function} [callback] The specific callback to remove.\n     * @return {void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(eventName, callback) {\n      if (!eventName) {\n        throw new TypeError('You must pass an event name.');\n      }\n\n      if (callback && typeof callback !== 'function') {\n        throw new TypeError('The callback must be a function.');\n      }\n\n      var lastCallback = removeCallback(this, \"event:\".concat(eventName), callback); // If there are no callbacks left, remove the listener\n\n      if (lastCallback) {\n        this.callMethod('removeEventListener', eventName).catch(function (e) {// Ignore the error. There will be an error event fired that\n          // will trigger the error callback if they are listening.\n        });\n      }\n    }\n    /**\n     * A promise to load a new video.\n     *\n     * @promise LoadVideoPromise\n     * @fulfill {number} The video with this id successfully loaded.\n     * @reject {TypeError} The id was not a number.\n     */\n\n    /**\n     * Load a new video into this embed. The promise will be resolved if\n     * the video is successfully loaded, or it will be rejected if it could\n     * not be loaded.\n     *\n     * @param {number|object} options The id of the video or an object with embed options.\n     * @return {LoadVideoPromise}\n     */\n\n  }, {\n    key: \"loadVideo\",\n    value: function loadVideo(options) {\n      return this.callMethod('loadVideo', options);\n    }\n    /**\n     * A promise to perform an action when the Player is ready.\n     *\n     * @todo document errors\n     * @promise LoadVideoPromise\n     * @fulfill {void}\n     */\n\n    /**\n     * Trigger a function when the player iframe has initialized. You do not\n     * need to wait for `ready` to trigger to begin adding event listeners\n     * or calling other methods.\n     *\n     * @return {ReadyPromise}\n     */\n\n  }, {\n    key: \"ready\",\n    value: function ready() {\n      var readyPromise = readyMap.get(this) || new npo_src(function (resolve, reject) {\n        reject(new Error('Unknown player. Probably unloaded.'));\n      });\n      return npo_src.resolve(readyPromise);\n    }\n    /**\n     * A promise to add a cue point to the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point to use for removeCuePoint.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Add a cue point to the player.\n     *\n     * @param {number} time The time for the cue point.\n     * @param {object} [data] Arbitrary data to be returned with the cue point.\n     * @return {AddCuePointPromise}\n     */\n\n  }, {\n    key: \"addCuePoint\",\n    value: function addCuePoint(time) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.callMethod('addCuePoint', {\n        time: time,\n        data: data\n      });\n    }\n    /**\n     * A promise to remove a cue point from the player.\n     *\n     * @promise AddCuePointPromise\n     * @fulfill {string} The id of the cue point that was removed.\n     * @reject {InvalidCuePoint} The cue point with the specified id was not\n     *         found.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Remove a cue point from the video.\n     *\n     * @param {string} id The id of the cue point to remove.\n     * @return {RemoveCuePointPromise}\n     */\n\n  }, {\n    key: \"removeCuePoint\",\n    value: function removeCuePoint(id) {\n      return this.callMethod('removeCuePoint', id);\n    }\n    /**\n     * A representation of a text track on a video.\n     *\n     * @typedef {Object} VimeoTextTrack\n     * @property {string} language The ISO language code.\n     * @property {string} kind The kind of track it is (captions or subtitles).\n     * @property {string} label The human‐readable label for the track.\n     */\n\n    /**\n     * A promise to enable a text track.\n     *\n     * @promise EnableTextTrackPromise\n     * @fulfill {VimeoTextTrack} The text track that was enabled.\n     * @reject {InvalidTrackLanguageError} No track was available with the\n     *         specified language.\n     * @reject {InvalidTrackError} No track was available with the specified\n     *         language and kind.\n     */\n\n    /**\n     * Enable the text track with the specified language, and optionally the\n     * specified kind (captions or subtitles).\n     *\n     * When set via the API, the track language will not change the viewer’s\n     * stored preference.\n     *\n     * @param {string} language The two‐letter language code.\n     * @param {string} [kind] The kind of track to enable (captions or subtitles).\n     * @return {EnableTextTrackPromise}\n     */\n\n  }, {\n    key: \"enableTextTrack\",\n    value: function enableTextTrack(language, kind) {\n      if (!language) {\n        throw new TypeError('You must pass a language.');\n      }\n\n      return this.callMethod('enableTextTrack', {\n        language: language,\n        kind: kind\n      });\n    }\n    /**\n     * A promise to disable the active text track.\n     *\n     * @promise DisableTextTrackPromise\n     * @fulfill {void} The track was disabled.\n     */\n\n    /**\n     * Disable the currently-active text track.\n     *\n     * @return {DisableTextTrackPromise}\n     */\n\n  }, {\n    key: \"disableTextTrack\",\n    value: function disableTextTrack() {\n      return this.callMethod('disableTextTrack');\n    }\n    /**\n     * A promise to pause the video.\n     *\n     * @promise PausePromise\n     * @fulfill {void} The video was paused.\n     */\n\n    /**\n     * Pause the video if it’s playing.\n     *\n     * @return {PausePromise}\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      return this.callMethod('pause');\n    }\n    /**\n     * A promise to play the video.\n     *\n     * @promise PlayPromise\n     * @fulfill {void} The video was played.\n     */\n\n    /**\n     * Play the video if it’s paused. **Note:** on iOS and some other\n     * mobile devices, you cannot programmatically trigger play. Once the\n     * viewer has tapped on the play button in the player, however, you\n     * will be able to use this function.\n     *\n     * @return {PlayPromise}\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      return this.callMethod('play');\n    }\n    /**\n     * A promise to unload the video.\n     *\n     * @promise UnloadPromise\n     * @fulfill {void} The video was unloaded.\n     */\n\n    /**\n     * Return the player to its initial state.\n     *\n     * @return {UnloadPromise}\n     */\n\n  }, {\n    key: \"unload\",\n    value: function unload() {\n      return this.callMethod('unload');\n    }\n    /**\n     * Cleanup the player and remove it from the DOM\n     *\n     * It won't be usable and a new one should be constructed\n     *  in order to do any operations.\n     *\n     * @return {Promise}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this5 = this;\n\n      return new npo_src(function (resolve) {\n        readyMap.delete(_this5);\n        playerMap.delete(_this5.element);\n\n        if (_this5._originalElement) {\n          playerMap.delete(_this5._originalElement);\n\n          _this5._originalElement.removeAttribute('data-vimeo-initialized');\n        }\n\n        if (_this5.element && _this5.element.nodeName === 'IFRAME' && _this5.element.parentNode) {\n          _this5.element.parentNode.removeChild(_this5.element);\n        }\n\n        resolve();\n      });\n    }\n    /**\n     * A promise to get the autopause behavior of the video.\n     *\n     * @promise GetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get the autopause behavior for this player.\n     *\n     * @return {GetAutopausePromise}\n     */\n\n  }, {\n    key: \"getAutopause\",\n    value: function getAutopause() {\n      return this.get('autopause');\n    }\n    /**\n     * A promise to set the autopause behavior of the video.\n     *\n     * @promise SetAutopausePromise\n     * @fulfill {boolean} Whether autopause is turned on or off.\n     * @reject {UnsupportedError} Autopause is not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Enable or disable the autopause behavior of this player.\n     *\n     * By default, when another video is played in the same browser, this\n     * player will automatically pause. Unless you have a specific reason\n     * for doing so, we recommend that you leave autopause set to the\n     * default (`true`).\n     *\n     * @param {boolean} autopause\n     * @return {SetAutopausePromise}\n     */\n\n  }, {\n    key: \"setAutopause\",\n    value: function setAutopause(autopause) {\n      return this.set('autopause', autopause);\n    }\n    /**\n     * A promise to get the buffered property of the video.\n     *\n     * @promise GetBufferedPromise\n     * @fulfill {Array} Buffered Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the buffered property of the video.\n     *\n     * @return {GetBufferedPromise}\n     */\n\n  }, {\n    key: \"getBuffered\",\n    value: function getBuffered() {\n      return this.get('buffered');\n    }\n    /**\n     * A promise to get the color of the player.\n     *\n     * @promise GetColorPromise\n     * @fulfill {string} The hex color of the player.\n     */\n\n    /**\n     * Get the color for this player.\n     *\n     * @return {GetColorPromise}\n     */\n\n  }, {\n    key: \"getColor\",\n    value: function getColor() {\n      return this.get('color');\n    }\n    /**\n     * A promise to set the color of the player.\n     *\n     * @promise SetColorPromise\n     * @fulfill {string} The color was successfully set.\n     * @reject {TypeError} The string was not a valid hex or rgb color.\n     * @reject {ContrastError} The color was set, but the contrast is\n     *         outside of the acceptable range.\n     * @reject {EmbedSettingsError} The owner of the player has chosen to\n     *         use a specific color.\n     */\n\n    /**\n     * Set the color of this player to a hex or rgb string. Setting the\n     * color may fail if the owner of the video has set their embed\n     * preferences to force a specific color.\n     *\n     * @param {string} color The hex or rgb color string to set.\n     * @return {SetColorPromise}\n     */\n\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      return this.set('color', color);\n    }\n    /**\n     * A representation of a cue point.\n     *\n     * @typedef {Object} VimeoCuePoint\n     * @property {number} time The time of the cue point.\n     * @property {object} data The data passed when adding the cue point.\n     * @property {string} id The unique id for use with removeCuePoint.\n     */\n\n    /**\n     * A promise to get the cue points of a video.\n     *\n     * @promise GetCuePointsPromise\n     * @fulfill {VimeoCuePoint[]} The cue points added to the video.\n     * @reject {UnsupportedError} Cue points are not supported with the current\n     *         player or browser.\n     */\n\n    /**\n     * Get an array of the cue points added to the video.\n     *\n     * @return {GetCuePointsPromise}\n     */\n\n  }, {\n    key: \"getCuePoints\",\n    value: function getCuePoints() {\n      return this.get('cuePoints');\n    }\n    /**\n     * A promise to get the current time of the video.\n     *\n     * @promise GetCurrentTimePromise\n     * @fulfill {number} The current time in seconds.\n     */\n\n    /**\n     * Get the current playback position in seconds.\n     *\n     * @return {GetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return this.get('currentTime');\n    }\n    /**\n     * A promise to set the current time of the video.\n     *\n     * @promise SetCurrentTimePromise\n     * @fulfill {number} The actual current time that was set.\n     * @reject {RangeError} the time was less than 0 or greater than the\n     *         video’s duration.\n     */\n\n    /**\n     * Set the current playback position in seconds. If the player was\n     * paused, it will remain paused. Likewise, if the player was playing,\n     * it will resume playing once the video has buffered.\n     *\n     * You can provide an accurate time and the player will attempt to seek\n     * to as close to that time as possible. The exact time will be the\n     * fulfilled value of the promise.\n     *\n     * @param {number} currentTime\n     * @return {SetCurrentTimePromise}\n     */\n\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(currentTime) {\n      return this.set('currentTime', currentTime);\n    }\n    /**\n     * A promise to get the duration of the video.\n     *\n     * @promise GetDurationPromise\n     * @fulfill {number} The duration in seconds.\n     */\n\n    /**\n     * Get the duration of the video in seconds. It will be rounded to the\n     * nearest second before playback begins, and to the nearest thousandth\n     * of a second after playback begins.\n     *\n     * @return {GetDurationPromise}\n     */\n\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.get('duration');\n    }\n    /**\n     * A promise to get the ended state of the video.\n     *\n     * @promise GetEndedPromise\n     * @fulfill {boolean} Whether or not the video has ended.\n     */\n\n    /**\n     * Get the ended state of the video. The video has ended if\n     * `currentTime === duration`.\n     *\n     * @return {GetEndedPromise}\n     */\n\n  }, {\n    key: \"getEnded\",\n    value: function getEnded() {\n      return this.get('ended');\n    }\n    /**\n     * A promise to get the loop state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the player is set to loop.\n     */\n\n    /**\n     * Get the loop state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getLoop\",\n    value: function getLoop() {\n      return this.get('loop');\n    }\n    /**\n     * A promise to set the loop state of the player.\n     *\n     * @promise SetLoopPromise\n     * @fulfill {boolean} The loop state that was set.\n     */\n\n    /**\n     * Set the loop state of the player. When set to `true`, the player\n     * will start over immediately once playback ends.\n     *\n     * @param {boolean} loop\n     * @return {SetLoopPromise}\n     */\n\n  }, {\n    key: \"setLoop\",\n    value: function setLoop(loop) {\n      return this.set('loop', loop);\n    }\n    /**\n     * A promise to get the paused state of the player.\n     *\n     * @promise GetLoopPromise\n     * @fulfill {boolean} Whether or not the video is paused.\n     */\n\n    /**\n     * Get the paused state of the player.\n     *\n     * @return {GetLoopPromise}\n     */\n\n  }, {\n    key: \"getPaused\",\n    value: function getPaused() {\n      return this.get('paused');\n    }\n    /**\n     * A promise to get the playback rate of the player.\n     *\n     * @promise GetPlaybackRatePromise\n     * @fulfill {number} The playback rate of the player on a scale from 0.5 to 2.\n     */\n\n    /**\n     * Get the playback rate of the player on a scale from `0.5` to `2`.\n     *\n     * @return {GetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"getPlaybackRate\",\n    value: function getPlaybackRate() {\n      return this.get('playbackRate');\n    }\n    /**\n     * A promise to set the playbackrate of the player.\n     *\n     * @promise SetPlaybackRatePromise\n     * @fulfill {number} The playback rate was set.\n     * @reject {RangeError} The playback rate was less than 0.5 or greater than 2.\n     */\n\n    /**\n     * Set the playback rate of the player on a scale from `0.5` to `2`. When set\n     * via the API, the playback rate will not be synchronized to other\n     * players or stored as the viewer's preference.\n     *\n     * @param {number} playbackRate\n     * @return {SetPlaybackRatePromise}\n     */\n\n  }, {\n    key: \"setPlaybackRate\",\n    value: function setPlaybackRate(playbackRate) {\n      return this.set('playbackRate', playbackRate);\n    }\n    /**\n     * A promise to get the played property of the video.\n     *\n     * @promise GetPlayedPromise\n     * @fulfill {Array} Played Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the played property of the video.\n     *\n     * @return {GetPlayedPromise}\n     */\n\n  }, {\n    key: \"getPlayed\",\n    value: function getPlayed() {\n      return this.get('played');\n    }\n    /**\n     * A promise to get the seekable property of the video.\n     *\n     * @promise GetSeekablePromise\n     * @fulfill {Array} Seekable Timeranges converted to an Array.\n     */\n\n    /**\n     * Get the seekable property of the video.\n     *\n     * @return {GetSeekablePromise}\n     */\n\n  }, {\n    key: \"getSeekable\",\n    value: function getSeekable() {\n      return this.get('seekable');\n    }\n    /**\n     * A promise to get the seeking property of the player.\n     *\n     * @promise GetSeekingPromise\n     * @fulfill {boolean} Whether or not the player is currently seeking.\n     */\n\n    /**\n     * Get if the player is currently seeking.\n     *\n     * @return {GetSeekingPromise}\n     */\n\n  }, {\n    key: \"getSeeking\",\n    value: function getSeeking() {\n      return this.get('seeking');\n    }\n    /**\n     * A promise to get the text tracks of a video.\n     *\n     * @promise GetTextTracksPromise\n     * @fulfill {VimeoTextTrack[]} The text tracks associated with the video.\n     */\n\n    /**\n     * Get an array of the text tracks that exist for the video.\n     *\n     * @return {GetTextTracksPromise}\n     */\n\n  }, {\n    key: \"getTextTracks\",\n    value: function getTextTracks() {\n      return this.get('textTracks');\n    }\n    /**\n     * A promise to get the embed code for the video.\n     *\n     * @promise GetVideoEmbedCodePromise\n     * @fulfill {string} The `<iframe>` embed code for the video.\n     */\n\n    /**\n     * Get the `<iframe>` embed code for the video.\n     *\n     * @return {GetVideoEmbedCodePromise}\n     */\n\n  }, {\n    key: \"getVideoEmbedCode\",\n    value: function getVideoEmbedCode() {\n      return this.get('videoEmbedCode');\n    }\n    /**\n     * A promise to get the id of the video.\n     *\n     * @promise GetVideoIdPromise\n     * @fulfill {number} The id of the video.\n     */\n\n    /**\n     * Get the id of the video.\n     *\n     * @return {GetVideoIdPromise}\n     */\n\n  }, {\n    key: \"getVideoId\",\n    value: function getVideoId() {\n      return this.get('videoId');\n    }\n    /**\n     * A promise to get the title of the video.\n     *\n     * @promise GetVideoTitlePromise\n     * @fulfill {number} The title of the video.\n     */\n\n    /**\n     * Get the title of the video.\n     *\n     * @return {GetVideoTitlePromise}\n     */\n\n  }, {\n    key: \"getVideoTitle\",\n    value: function getVideoTitle() {\n      return this.get('videoTitle');\n    }\n    /**\n     * A promise to get the native width of the video.\n     *\n     * @promise GetVideoWidthPromise\n     * @fulfill {number} The native width of the video.\n     */\n\n    /**\n     * Get the native width of the currently‐playing video. The width of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoWidthPromise}\n     */\n\n  }, {\n    key: \"getVideoWidth\",\n    value: function getVideoWidth() {\n      return this.get('videoWidth');\n    }\n    /**\n     * A promise to get the native height of the video.\n     *\n     * @promise GetVideoHeightPromise\n     * @fulfill {number} The native height of the video.\n     */\n\n    /**\n     * Get the native height of the currently‐playing video. The height of\n     * the highest‐resolution available will be used before playback begins.\n     *\n     * @return {GetVideoHeightPromise}\n     */\n\n  }, {\n    key: \"getVideoHeight\",\n    value: function getVideoHeight() {\n      return this.get('videoHeight');\n    }\n    /**\n     * A promise to get the vimeo.com url for the video.\n     *\n     * @promise GetVideoUrlPromise\n     * @fulfill {number} The vimeo.com url for the video.\n     * @reject {PrivacyError} The url isn’t available because of the video’s privacy setting.\n     */\n\n    /**\n     * Get the vimeo.com url for the video.\n     *\n     * @return {GetVideoUrlPromise}\n     */\n\n  }, {\n    key: \"getVideoUrl\",\n    value: function getVideoUrl() {\n      return this.get('videoUrl');\n    }\n    /**\n     * A promise to get the volume level of the player.\n     *\n     * @promise GetVolumePromise\n     * @fulfill {number} The volume level of the player on a scale from 0 to 1.\n     */\n\n    /**\n     * Get the current volume level of the player on a scale from `0` to `1`.\n     *\n     * Most mobile devices do not support an independent volume from the\n     * system volume. In those cases, this method will always return `1`.\n     *\n     * @return {GetVolumePromise}\n     */\n\n  }, {\n    key: \"getVolume\",\n    value: function getVolume() {\n      return this.get('volume');\n    }\n    /**\n     * A promise to set the volume level of the player.\n     *\n     * @promise SetVolumePromise\n     * @fulfill {number} The volume was set.\n     * @reject {RangeError} The volume was less than 0 or greater than 1.\n     */\n\n    /**\n     * Set the volume of the player on a scale from `0` to `1`. When set\n     * via the API, the volume level will not be synchronized to other\n     * players or stored as the viewer’s preference.\n     *\n     * Most mobile devices do not support setting the volume. An error will\n     * *not* be triggered in that situation.\n     *\n     * @param {number} volume\n     * @return {SetVolumePromise}\n     */\n\n  }, {\n    key: \"setVolume\",\n    value: function setVolume(volume) {\n      return this.set('volume', volume);\n    }\n  }]);\n\n  return Player;\n}(); // Setup embed only if this is not a node environment\n\n\nif (!isNode) {\n  initializeEmbeds();\n  resizeEmbeds();\n}\n\nexport default Player;\n"],"sourceRoot":""}